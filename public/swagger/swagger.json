{
    "swagger": "2.0",
    "info": {
        "version": "0.0.1",
        "title": "Dwellar REST API"
    },
    "host": "52.74.34.255",
    "basePath": "/api/v1",
    "paths": {
        "/accounts": {
            "post": {
                "description": "This API allows creation of a single new account.\n",
                "tags": [
                    "Accounts"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "query",
                        "description": "Access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "Email address of the user. Max 200 characters.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "description": "Needs to be stored encrypted in the database. This will need to be worked out.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "first_name",
                        "in": "query",
                        "description": "First name of the user. Max 200 characters.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "last_name",
                        "in": "query",
                        "description": "Last name of the user. Max 200 characters.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "organization_id",
                        "in": "query",
                        "description": "Required if we dont provide Name of organization",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "organization_name",
                        "in": "query",
                        "description": "Name of the organization. Max 200 characters. If organization already exists, return error with details to the user.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "organization_address",
                        "in": "query",
                        "description": "JSON blob with address",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "account_timezone",
                        "in": "query",
                        "description": "Code to specify timezone of the user",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "account_locale",
                        "in": "query",
                        "description": "Code to specify the locale of the user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response"
                    },
                    "400": {
                        "description": "Error Response"
                    },
                    "401": {
                        "description": "Unauthorized Response",
                        "schema": {}
                    },
                    "403": {
                        "description": "Rate limit exceeded"
                    }
                }
            },
            "get": {
                "description": "This API lists all the accounts\n",
                "tags": [
                    "Accounts"
                ],
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Can choose to list “active”, “suspended”, “closed” or “all”",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Returns the requested page. Each page can have up to 50 accounts",
                        "required": false,
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response"
                    },
                    "400": {
                        "description": "Error Response"
                    },
                    "403": {
                        "description": "Rate limit exceeded"
                    }
                }
            }
        },
        "/accounts/{account_id}": {
            "get": {
                "description": "This API returns information for a single account.\n",
                "tags": [
                    "Accounts"
                ],
                "parameters": [
                    {
                        "name": "account_id",
                        "in": "path",
                        "description": "GUID of the account for which the information is requested",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response"
                    },
                    "400": {
                        "description": "Error Response"
                    },
                    "403": {
                        "description": "Rate limit exceeded"
                    },
                    "404": {
                        "description": "Error Response"
                    }
                }
            },
            "put": {
                "description": "This API updates a single existing account.\n",
                "tags": [
                    "Accounts"
                ],
                "parameters": [
                    {
                        "name": "account_id",
                        "in": "path",
                        "description": "GUID of the account to update",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "Email address of the user. Max 200 characters.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "first_name",
                        "in": "query",
                        "description": "First name of the user. Max 200 characters.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "last_name",
                        "in": "query",
                        "description": "Last name of the user. Max 200 characters.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "organization_id",
                        "in": "query",
                        "description": "Organization ID",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "organization_name",
                        "in": "query",
                        "description": "Name of the organization. Max 200 characters. If organization already exists, return error with details to the user.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "organization_address",
                        "in": "query",
                        "description": "JSON blob with address",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response"
                    },
                    "400": {
                        "description": "Error Response"
                    },
                    "403": {
                        "description": "Rate limit exceeded"
                    },
                    "404": {
                        "description": "Error Response"
                    }
                }
            }
        },
        "/accounts/{account_id}/close": {
            "put": {
                "description": "This API closes a single existing account. Accounts cannot be deleted, only closed. They will be retained as inactive.\n",
                "tags": [
                    "Accounts"
                ],
                "parameters": [
                    {
                        "name": "account_id",
                        "in": "path",
                        "description": "GUID of the account to close",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "close_reason_code",
                        "in": "query",
                        "description": "Integer code for closure reason.",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "close_reason_notes",
                        "in": "query",
                        "description": "Text string where user can provide notes for closure reason.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response"
                    },
                    "400": {
                        "description": "Error Response"
                    },
                    "403": {
                        "description": "Rate limit exceeded"
                    },
                    "404": {
                        "description": "Error Response"
                    }
                }
            }
        },
        "/accounts/{account_id}/reopen": {
            "put": {
                "description": "This API reopens a single closed account with the given ID. \n",
                "tags": [
                    "Accounts"
                ],
                "parameters": [
                    {
                        "name": "account_id",
                        "in": "path",
                        "description": "GUID of the account to reopen",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "close_reason_code",
                        "in": "query",
                        "description": "Integer code for reopen reason.",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "close_reason_notes",
                        "in": "query",
                        "description": "Text string where user can provide notes for reopen reason.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response"
                    },
                    "400": {
                        "description": "Error Response"
                    },
                    "403": {
                        "description": "Rate limit exceeded"
                    },
                    "404": {
                        "description": "Error Response"
                    }
                }
            }
        },
        "/accounts/{account_id}/suspend": {
            "put": {
                "description": "This API closes a single existing account. Accounts cannot be deleted, only closed. They will be retained as inactive.\n",
                "tags": [
                    "Accounts"
                ],
                "parameters": [
                    {
                        "name": "account_id",
                        "in": "path",
                        "description": "GUID of the account to close",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "close_reason_code",
                        "in": "query",
                        "description": "Integer code for suspension reason.",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "close_reason_notes",
                        "in": "query",
                        "description": "Text string where user can provide notes for suspension reason.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response"
                    },
                    "400": {
                        "description": "Error Response"
                    },
                    "403": {
                        "description": "Rate limit exceeded"
                    },
                    "404": {
                        "description": "Error Response"
                    }
                }
            }
        },
        "/accounts/{account_id}/password": {
            "put": {
                "description": "This API allows the user to update their password.\n",
                "tags": [
                    "Accounts"
                ],
                "parameters": [
                    {
                        "name": "account_id",
                        "in": "path",
                        "description": "GUID of the account for which the password needs to be changed",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "current_password",
                        "in": "query",
                        "description": "The users current password",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "new_password",
                        "in": "query",
                        "description": "The users new password",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "otp",
                        "in": "query",
                        "description": "One time password the user will need to provide. This will be sent to their phone via SMS.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response"
                    },
                    "400": {
                        "description": "Error Response"
                    },
                    "403": {
                        "description": "Rate limit exceeded"
                    },
                    "404": {
                        "description": "Error Response"
                    }
                }
            }
        },
        "/contacts": {
            "post": {
                "description": "This API allows creation of a contact.\n",
                "tags": [
                    "Contacts"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "query",
                        "description": "Access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "photo",
                        "in": "query",
                        "description": "Photo of the contact. Should be in file type.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Name of the Contact. Max 200 characters.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "birth_date",
                        "in": "query",
                        "description": "Date of birth. Format should be like 1995-06-01 (YYYY-mm-dd).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "address",
                        "in": "query",
                        "description": "Address of the contact",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "city",
                        "in": "query",
                        "description": "City Address of the contact",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "state",
                        "in": "query",
                        "description": "State Address of the contact",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "country",
                        "in": "query",
                        "description": "Country Address of the contact.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "zip",
                        "in": "query",
                        "description": "ZIP Code",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "mobile",
                        "in": "query",
                        "description": "Mobile Phones or telephone numbers of the contact",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "Email Address of the contact",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "tags",
                        "in": "query",
                        "description": "Tags of the contact. Should be comma separated values.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "description": "Text that describe the contact",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fb",
                        "in": "query",
                        "description": "Facebook Profile address of the contact",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "twitter",
                        "in": "query",
                        "description": "Twitter Profile address of the contact",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "google",
                        "in": "query",
                        "description": "Google+ Profile address of the contact",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response"
                    },
                    "400": {
                        "description": "Error Response"
                    },
                    "401": {
                        "description": "Unauthorized Response",
                        "schema": {}
                    },
                    "403": {
                        "description": "Rate limit exceeded"
                    }
                }
            },
            "get": {
                "description": "This API lists all the contacts of the current logged user\n",
                "tags": [
                    "Contacts"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Returns the requested page. Each page can have up to 50 contacts",
                        "required": false,
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response"
                    },
                    "400": {
                        "description": "Error Response"
                    },
                    "403": {
                        "description": "Rate limit exceeded"
                    }
                }
            }
        },
        "/contacts/{contact_id}": {
            "get": {
                "description": "This API returns information for a single contact.\n",
                "tags": [
                    "Contacts"
                ],
                "parameters": [
                    {
                        "name": "contact_id",
                        "in": "path",
                        "description": "GUID of the contact for which the information is requested",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response"
                    },
                    "400": {
                        "description": "Error Response"
                    },
                    "403": {
                        "description": "Rate limit exceeded"
                    },
                    "404": {
                        "description": "Error Response"
                    }
                }
            },
            "put": {
                "description": "This API updates a single existing contact.\n",
                "tags": [
                    "Contacts"
                ],
                "parameters": [
                    {
                        "name": "contact_id",
                        "in": "path",
                        "description": "GUID of the contact to update",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "photo",
                        "in": "query",
                        "description": "Photo of the contact. Should be in file type.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Name of the Contact. Max 200 characters.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "birth_date",
                        "in": "query",
                        "description": "Date of birth. Format should be like 1995-06-01 (YYYY-mm-dd).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "address",
                        "in": "query",
                        "description": "Address of the contact",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "city",
                        "in": "query",
                        "description": "City Address of the contact",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "state",
                        "in": "query",
                        "description": "State Address of the contact",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "country",
                        "in": "query",
                        "description": "Country Address of the contact.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "zip",
                        "in": "query",
                        "description": "ZIP Code",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "mobile",
                        "in": "query",
                        "description": "Mobile Phones or telephone numbers of the contact",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "Email Address of the contact",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "tags",
                        "in": "query",
                        "description": "Tags of the contact. Should be comma separated values.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "description": "Text that describe the contact",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fb",
                        "in": "query",
                        "description": "Facebook Profile address of the contact",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "twitter",
                        "in": "query",
                        "description": "Twitter Profile address of the contact",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "google",
                        "in": "query",
                        "description": "Google+ Profile address of the contact",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "revision_number",
                        "in": "query",
                        "description": "Revision Number is required when updating contact. That way we can make sure that every data accross devices are correct",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response"
                    },
                    "400": {
                        "description": "Error Response"
                    },
                    "403": {
                        "description": "Rate limit exceeded"
                    },
                    "404": {
                        "description": "Error Response"
                    }
                }
            },
            "delete": {
                "description": "This API deletes a single contact.\n",
                "tags": [
                    "Contacts"
                ],
                "parameters": [
                    {
                        "name": "contact_id",
                        "in": "path",
                        "description": "GUID of the contact for which the information is requested",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response"
                    },
                    "400": {
                        "description": "Error Response"
                    },
                    "403": {
                        "description": "Rate limit exceeded"
                    },
                    "404": {
                        "description": "Error Response"
                    }
                }
            }
        },
        "/properties": {
            "post": {
                "description": "This API allows creation of a Property.\n",
                "tags": [
                    "Properties"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "query",
                        "description": "Access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "project_name",
                        "in": "query",
                        "description": "Name of the project.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "title",
                        "in": "query",
                        "description": "Title of the property listing.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "address",
                        "in": "query",
                        "description": "Address.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "bedrooms",
                        "in": "query",
                        "description": "Number of bedrooms of the property.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "bathrooms",
                        "in": "query",
                        "description": "Number of bathrooms of the property.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "builtup_area",
                        "in": "query",
                        "description": "Builtup Area.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "carpet_area",
                        "in": "query",
                        "description": "Carpet Area.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "agreement_value",
                        "in": "query",
                        "description": "Agreement Value",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "total_cost",
                        "in": "query",
                        "description": "Total Cost.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "availability_type_code",
                        "in": "query",
                        "description": "Availability",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "views",
                        "in": "query",
                        "description": "Views.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "furnishings",
                        "in": "query",
                        "description": "Furnishings.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "source_code",
                        "in": "query",
                        "description": "Souce of the property listing.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "description": "description of the property.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "images",
                        "in": "query",
                        "description": "Images of the property.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response"
                    },
                    "400": {
                        "description": "Error Response"
                    },
                    "401": {
                        "description": "Unauthorized Response",
                        "schema": {}
                    },
                    "403": {
                        "description": "Rate limit exceeded"
                    }
                }
            },
            "get": {
                "description": "This API lists all the properties of the current logged user\n",
                "tags": [
                    "Properties"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Returns the requested page. Each page can have up to 50 properties",
                        "required": false,
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response"
                    },
                    "400": {
                        "description": "Error Response"
                    },
                    "403": {
                        "description": "Rate limit exceeded"
                    }
                }
            }
        },
        "/properties/{property_id}": {
            "get": {
                "description": "This API returns information for a single property.\n",
                "tags": [
                    "Properties"
                ],
                "parameters": [
                    {
                        "name": "property_id",
                        "in": "path",
                        "description": "GUID of the property for which the information is requested",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response"
                    },
                    "400": {
                        "description": "Error Response"
                    },
                    "403": {
                        "description": "Rate limit exceeded"
                    },
                    "404": {
                        "description": "Error Response"
                    }
                }
            },
            "put": {
                "description": "This API updates a single existing Property.\n",
                "tags": [
                    "Properties"
                ],
                "parameters": [
                    {
                        "name": "property_id",
                        "in": "path",
                        "description": "GUID of the property to update",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "access_token",
                        "in": "query",
                        "description": "Access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "project_name",
                        "in": "query",
                        "description": "Name of the project.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "title",
                        "in": "query",
                        "description": "Title of the property listing.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "address",
                        "in": "query",
                        "description": "Address.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "bedrooms",
                        "in": "query",
                        "description": "Number of bedrooms of the property.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "bathrooms",
                        "in": "query",
                        "description": "Number of bathrooms of the property.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "builtup_area",
                        "in": "query",
                        "description": "Builtup Area.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "carpet_area",
                        "in": "query",
                        "description": "Carpet Area.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "agreement_value",
                        "in": "query",
                        "description": "Agreement Value",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "total_cost",
                        "in": "query",
                        "description": "Total Cost.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "availability_type_code",
                        "in": "query",
                        "description": "Availability",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "views",
                        "in": "query",
                        "description": "Views.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "furnishings",
                        "in": "query",
                        "description": "Furnishings.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "source_code",
                        "in": "query",
                        "description": "Souce of the property listing.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "description": "description of the property.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "images",
                        "in": "query",
                        "description": "Images of the property.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response"
                    },
                    "400": {
                        "description": "Error Response"
                    },
                    "403": {
                        "description": "Rate limit exceeded"
                    },
                    "404": {
                        "description": "Error Response"
                    }
                }
            },
            "delete": {
                "description": "This API deletes a single property and its others information.\n",
                "tags": [
                    "Properties"
                ],
                "parameters": [
                    {
                        "name": "property_id",
                        "in": "path",
                        "description": "GUID of the property for which the information is requested",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response"
                    },
                    "400": {
                        "description": "Error Response"
                    },
                    "403": {
                        "description": "Rate limit exceeded"
                    },
                    "404": {
                        "description": "Error Response"
                    }
                }
            }
        },
        "/properties/{property_id}/compensations": {
            "get": {
                "description": "This API returns information for compensations of the property.\n",
                "tags": [
                    "Properties"
                ],
                "parameters": [
                    {
                        "name": "property_id",
                        "in": "path",
                        "description": "GUID of the property for which the information is requested",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response"
                    },
                    "400": {
                        "description": "Error Response"
                    },
                    "403": {
                        "description": "Rate limit exceeded"
                    },
                    "404": {
                        "description": "Error Response"
                    }
                }
            },
            "post": {
                "description": "This API allows creation of a Property compensations.\n",
                "tags": [
                    "Properties"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "property_id",
                        "in": "path",
                        "description": "GUID of the property.",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "compensation_of",
                        "in": "query",
                        "description": "Name of the person to be compensate.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "percentage",
                        "in": "query",
                        "description": "Percentage of the compensation.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "compensation",
                        "in": "query",
                        "description": "Amount of the compensation.",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "notes",
                        "in": "query",
                        "description": "Notes.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response"
                    },
                    "400": {
                        "description": "Error Response"
                    },
                    "401": {
                        "description": "Unauthorized Response",
                        "schema": {}
                    },
                    "403": {
                        "description": "Rate limit exceeded"
                    }
                }
            }
        },
        "/properties/{property_id}/compensations/{compensation_id}": {
            "put": {
                "description": "This API updates a compensation of Property.\n",
                "tags": [
                    "Properties"
                ],
                "parameters": [
                    {
                        "name": "property_id",
                        "in": "path",
                        "description": "GUID of the property.",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "compensation_id",
                        "in": "path",
                        "description": "GUID of the compensation.",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "compensation_of",
                        "in": "query",
                        "description": "Name of the person to be compensate.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "percentage",
                        "in": "query",
                        "description": "Percentage of the compensation.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "compensation",
                        "in": "query",
                        "description": "Amount of the compensation.",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "notes",
                        "in": "query",
                        "description": "Notes.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response"
                    },
                    "400": {
                        "description": "Error Response"
                    },
                    "403": {
                        "description": "Rate limit exceeded"
                    },
                    "404": {
                        "description": "Error Response"
                    }
                }
            },
            "delete": {
                "description": "This API deletes a single property compensation.\n",
                "tags": [
                    "Properties"
                ],
                "parameters": [
                    {
                        "name": "property_id",
                        "in": "path",
                        "description": "GUID of the property.",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "compensation_id",
                        "in": "path",
                        "description": "GUID of the compensation.",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response"
                    },
                    "400": {
                        "description": "Error Response"
                    },
                    "403": {
                        "description": "Rate limit exceeded"
                    },
                    "404": {
                        "description": "Error Response"
                    }
                }
            }
        },
        "/properties/{property_id}/charges": {
            "get": {
                "description": "This API returns information for charges of the property.\n",
                "tags": [
                    "Properties"
                ],
                "parameters": [
                    {
                        "name": "property_id",
                        "in": "path",
                        "description": "GUID of the property for which the information is requested",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response"
                    },
                    "400": {
                        "description": "Error Response"
                    },
                    "403": {
                        "description": "Rate limit exceeded"
                    },
                    "404": {
                        "description": "Error Response"
                    }
                }
            },
            "post": {
                "description": "This API allows creation of a Charges.\n",
                "tags": [
                    "Properties"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "property_id",
                        "in": "path",
                        "description": "GUID of the property.",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "description": "description.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "percentage",
                        "in": "query",
                        "description": "Percentage of the charges.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "amount",
                        "in": "query",
                        "description": "Amount of the charges.",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response"
                    },
                    "400": {
                        "description": "Error Response"
                    },
                    "401": {
                        "description": "Unauthorized Response",
                        "schema": {}
                    },
                    "403": {
                        "description": "Rate limit exceeded"
                    }
                }
            }
        },
        "/properties/{property_id}/charges/{charge_id}": {
            "put": {
                "description": "This API updates a compensation of Property.\n",
                "tags": [
                    "Properties"
                ],
                "parameters": [
                    {
                        "name": "property_id",
                        "in": "path",
                        "description": "GUID of the property.",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "charge_id",
                        "in": "path",
                        "description": "GUID of the charges.",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "description": "description.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "percentage",
                        "in": "query",
                        "description": "Percentage of the charges.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "amount",
                        "in": "query",
                        "description": "Amount of the charges.",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response"
                    },
                    "400": {
                        "description": "Error Response"
                    },
                    "403": {
                        "description": "Rate limit exceeded"
                    },
                    "404": {
                        "description": "Error Response"
                    }
                }
            },
            "delete": {
                "description": "This API deletes a single property charges.\n",
                "tags": [
                    "Properties"
                ],
                "parameters": [
                    {
                        "name": "property_id",
                        "in": "path",
                        "description": "GUID of the property.",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "charge_id",
                        "in": "path",
                        "description": "GUID of the compensation.",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response"
                    },
                    "400": {
                        "description": "Error Response"
                    },
                    "403": {
                        "description": "Rate limit exceeded"
                    },
                    "404": {
                        "description": "Error Response"
                    }
                }
            }
        },
        "/properties/{property_id}/communities": {
            "get": {
                "description": "This API returns information for charges of the property.\n",
                "tags": [
                    "Properties"
                ],
                "parameters": [
                    {
                        "name": "property_id",
                        "in": "path",
                        "description": "GUID of the property for which the information is requested",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response"
                    },
                    "400": {
                        "description": "Error Response"
                    },
                    "403": {
                        "description": "Rate limit exceeded"
                    },
                    "404": {
                        "description": "Error Response"
                    }
                }
            },
            "post": {
                "description": "This API allows creation of a Charges.\n",
                "tags": [
                    "Properties"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "property_id",
                        "in": "path",
                        "description": "GUID of the property.",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "community_name",
                        "in": "query",
                        "description": "description.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "association",
                        "in": "query",
                        "description": "Percentage of the charges.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "association_fee",
                        "in": "query",
                        "description": "Amount of the charges.",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "fees_included",
                        "in": "query",
                        "description": "Amount of the charges.",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response"
                    },
                    "400": {
                        "description": "Error Response"
                    },
                    "401": {
                        "description": "Unauthorized Response",
                        "schema": {}
                    },
                    "403": {
                        "description": "Rate limit exceeded"
                    }
                }
            }
        },
        "/properties/{property_id}/communities/{community_id}": {
            "put": {
                "description": "This API updates a compensation of Property.\n",
                "tags": [
                    "Properties"
                ],
                "parameters": [
                    {
                        "name": "property_id",
                        "in": "path",
                        "description": "GUID of the property.",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "community_id",
                        "in": "path",
                        "description": "GUID of the charges.",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "community_name",
                        "in": "query",
                        "description": "description.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "association",
                        "in": "query",
                        "description": "Percentage of the charges.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "association_fee",
                        "in": "query",
                        "description": "Amount of the charges.",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "fees_included",
                        "in": "query",
                        "description": "Amount of the charges.",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response"
                    },
                    "400": {
                        "description": "Error Response"
                    },
                    "403": {
                        "description": "Rate limit exceeded"
                    },
                    "404": {
                        "description": "Error Response"
                    }
                }
            },
            "delete": {
                "description": "This API deletes a single property charges.\n",
                "tags": [
                    "Properties"
                ],
                "parameters": [
                    {
                        "name": "property_id",
                        "in": "path",
                        "description": "GUID of the property.",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "community_id",
                        "in": "path",
                        "description": "GUID of the compensation.",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response"
                    },
                    "400": {
                        "description": "Error Response"
                    },
                    "403": {
                        "description": "Rate limit exceeded"
                    },
                    "404": {
                        "description": "Error Response"
                    }
                }
            }
        },
        "/properties/{property_id}/notes": {
            "get": {
                "description": "This API returns information for charges of the property.\n",
                "tags": [
                    "Properties"
                ],
                "parameters": [
                    {
                        "name": "property_id",
                        "in": "path",
                        "description": "GUID of the property for which the information is requested",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response"
                    },
                    "400": {
                        "description": "Error Response"
                    },
                    "403": {
                        "description": "Rate limit exceeded"
                    },
                    "404": {
                        "description": "Error Response"
                    }
                }
            },
            "post": {
                "description": "This API allows creation of a Charges.\n",
                "tags": [
                    "Properties"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "property_id",
                        "in": "path",
                        "description": "GUID of the property.",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "title",
                        "in": "query",
                        "description": "description.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "content",
                        "in": "query",
                        "description": "Percentage of the charges.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response"
                    },
                    "400": {
                        "description": "Error Response"
                    },
                    "401": {
                        "description": "Unauthorized Response",
                        "schema": {}
                    },
                    "403": {
                        "description": "Rate limit exceeded"
                    }
                }
            }
        },
        "/properties/{property_id}/notes/{note_id}": {
            "put": {
                "description": "This API updates a compensation of Property.\n",
                "tags": [
                    "Properties"
                ],
                "parameters": [
                    {
                        "name": "property_id",
                        "in": "path",
                        "description": "GUID of the property.",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "note_id",
                        "in": "path",
                        "description": "GUID of the charges.",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "title",
                        "in": "query",
                        "description": "description.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "content",
                        "in": "query",
                        "description": "Percentage of the charges.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response"
                    },
                    "400": {
                        "description": "Error Response"
                    },
                    "403": {
                        "description": "Rate limit exceeded"
                    },
                    "404": {
                        "description": "Error Response"
                    }
                }
            },
            "delete": {
                "description": "This API deletes a single property charges.\n",
                "tags": [
                    "Properties"
                ],
                "parameters": [
                    {
                        "name": "property_id",
                        "in": "path",
                        "description": "GUID of the property.",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "note_id",
                        "in": "path",
                        "description": "GUID of the compensation.",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response"
                    },
                    "400": {
                        "description": "Error Response"
                    },
                    "403": {
                        "description": "Rate limit exceeded"
                    },
                    "404": {
                        "description": "Error Response"
                    }
                }
            }
        },
        "/properties/{property_id}/offers": {
            "get": {
                "description": "This API returns information for charges of the property.\n",
                "tags": [
                    "Properties"
                ],
                "parameters": [
                    {
                        "name": "property_id",
                        "in": "path",
                        "description": "GUID of the property for which the information is requested",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response"
                    },
                    "400": {
                        "description": "Error Response"
                    },
                    "403": {
                        "description": "Rate limit exceeded"
                    },
                    "404": {
                        "description": "Error Response"
                    }
                }
            }
        },
        "/properties/{property_id}/offers/{offer_id}/accept": {
            "post": {
                "description": "This API updates a compensation of Property.\n",
                "tags": [
                    "Properties"
                ],
                "parameters": [
                    {
                        "name": "property_id",
                        "in": "path",
                        "description": "GUID of the property.",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "offer_id",
                        "in": "path",
                        "description": "GUID of the charges.",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response"
                    },
                    "400": {
                        "description": "Error Response"
                    },
                    "403": {
                        "description": "Rate limit exceeded"
                    },
                    "404": {
                        "description": "Error Response"
                    }
                }
            }
        },
        "/properties/{property_id}/offers/{offer_id}/decline": {
            "post": {
                "description": "This API updates a compensation of Property.\n",
                "tags": [
                    "Properties"
                ],
                "parameters": [
                    {
                        "name": "property_id",
                        "in": "path",
                        "description": "GUID of the property.",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "offer_id",
                        "in": "path",
                        "description": "GUID of the charges.",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response"
                    },
                    "400": {
                        "description": "Error Response"
                    },
                    "403": {
                        "description": "Rate limit exceeded"
                    },
                    "404": {
                        "description": "Error Response"
                    }
                }
            }
        },
        "/tasks": {
            "post": {
                "description": "This API allows creation of task.\n",
                "tags": [
                    "Tasks"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "query",
                        "description": "Access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "task_name",
                        "in": "query",
                        "description": "The name of the task.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "assigned_contact_id",
                        "in": "query",
                        "description": "Contact ID of the contact you want to assign for the task.",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "due_date",
                        "in": "query",
                        "description": "Due Date. Format should be like 1995-06-01 13:00:00 (YYYY-mm-dd hh:mm:ss).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "priority",
                        "in": "query",
                        "description": "Priority of the task. Priority selections are high,medium,low",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "categories",
                        "in": "query",
                        "description": "Category of the task",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "description": "Description of the task",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response"
                    },
                    "400": {
                        "description": "Error Response"
                    },
                    "401": {
                        "description": "Unauthorized Response",
                        "schema": {}
                    },
                    "403": {
                        "description": "Rate limit exceeded"
                    }
                }
            },
            "get": {
                "description": "This API lists all the tasks of the current logged user\n",
                "tags": [
                    "Tasks"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Returns the requested page. Each page can have up to 50 tasks",
                        "required": false,
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response"
                    },
                    "400": {
                        "description": "Error Response"
                    },
                    "403": {
                        "description": "Rate limit exceeded"
                    }
                }
            }
        },
        "/tasks/search": {
            "get": {
                "description": "This API lists all the tasks based on query string of the current logged user\n",
                "tags": [
                    "Tasks"
                ],
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "The string you want to search",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Returns the requested page. Each page can have up to 50 tasks",
                        "required": false,
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response"
                    },
                    "400": {
                        "description": "Error Response"
                    },
                    "403": {
                        "description": "Rate limit exceeded"
                    }
                }
            }
        },
        "/tasks/{task_id}": {
            "get": {
                "description": "This API returns information for a single task.\n",
                "tags": [
                    "Tasks"
                ],
                "parameters": [
                    {
                        "name": "task_id",
                        "in": "path",
                        "description": "GUID of the task for which the information is requested",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response"
                    },
                    "400": {
                        "description": "Error Response"
                    },
                    "403": {
                        "description": "Rate limit exceeded"
                    },
                    "404": {
                        "description": "Error Response"
                    }
                }
            },
            "put": {
                "description": "This API updates a single existing task.\n",
                "tags": [
                    "Tasks"
                ],
                "parameters": [
                    {
                        "name": "task_id",
                        "in": "path",
                        "description": "GUID of the task to update",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "access_token",
                        "in": "query",
                        "description": "Access token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "task_name",
                        "in": "query",
                        "description": "The name of the task.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "assigned_contact_id",
                        "in": "query",
                        "description": "Contact ID of the contact you want to assign for the task.",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "due_date",
                        "in": "query",
                        "description": "Due Date. Format should be like 1995-06-01 13:00:00 (YYYY-mm-dd hh:mm:ss).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "priority",
                        "in": "query",
                        "description": "Priority of the task. Priority selections are high,medium,low",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "categories",
                        "in": "query",
                        "description": "Category of the task",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "description": "Description of the task",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response"
                    },
                    "400": {
                        "description": "Error Response"
                    },
                    "403": {
                        "description": "Rate limit exceeded"
                    },
                    "404": {
                        "description": "Error Response"
                    }
                }
            },
            "delete": {
                "description": "This API deletes a single task.\n",
                "tags": [
                    "Tasks"
                ],
                "parameters": [
                    {
                        "name": "task_id",
                        "in": "path",
                        "description": "GUID of the task for which the information is requested",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response"
                    },
                    "400": {
                        "description": "Error Response"
                    },
                    "403": {
                        "description": "Rate limit exceeded"
                    },
                    "404": {
                        "description": "Error Response"
                    }
                }
            }
        }
    }
}